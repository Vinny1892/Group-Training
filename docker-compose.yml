version: "3.7"
services:
  mongo:
    build:
      dockerfile: ./docker/Dockerfile.mongo
      context: .
    container_name: mongo-database
    ports:
      - 27017:27017
    networks:
      network-develop:
        ipv4_address: 172.100.0.4

  mongo-express:
    image: mongo-express
    container_name: mongo-express-interface
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: passwordRoot
      ME_CONFIG_OPTIONS_EDITORTHEME: ambiance
      ME_CONFIG_MONGODB_SERVER: 172.100.0.4
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "false"
      ME_CONFIG_MONGODB_AUTH_USERNAME: app
      ME_CONFIG_MONGODB_AUTH_PASSWORD: passwordApp
      ME_CONFIG_MONGODB_AUTH_DATABASE: app
    depends_on:
      - mongo
    networks:
      network-develop:
        ipv4_address: 172.100.0.5
  app-grouptraining:
    build:
      dockerfile: ./docker/dockerfile.app
      context: .
    container_name: "app-Laravel"
    #command: "composer install"
    ports:
      - 8085:80
    volumes:
      - .:/var/www/html
    networks:
      network-develop:
        ipv4_address: 172.100.0.6
  redis:
    image: redis
    command: redis-server --requirepass seila123
    ports:
      - "6379:6379"
    networks:
      network-develop:
        ipv4_address: 172.100.0.7
networks:
  network-develop:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.100.0.0/24
